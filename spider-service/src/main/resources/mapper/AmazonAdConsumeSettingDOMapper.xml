<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spider.amazon.mapper.AmazonAdConsumeSettingDOMapper">
    <resultMap id="BaseResultMap" type="com.spider.amazon.model.AmazonAdConsumeSettingDO">
        <id column="SettingId" jdbcType="INTEGER" property="id"/>
        <result column="SettingName" jdbcType="VARCHAR" property="name"/>
        <result column="SettingDescription" jdbcType="VARCHAR" property="description"/>
        <result column="SettingSearchWords" jdbcType="VARCHAR" property="searchWords"/>
        <result column="SettingActive" jdbcType="BOOLEAN" property="active"/>
        <result column="SettingCreatedBy" jdbcType="VARCHAR" property="createdBy"/>
        <result column="SettingUpdatedBy" jdbcType="VARCHAR" property="updatedBy"/>
        <result column="SettingCreatedAt" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="SettingUpdatedAt" jdbcType="TIMESTAMP" property="updatedAt"/>
        <result column="SettingRemoved" jdbcType="BOOLEAN" property="removed"/>

        <collection property="items" ofType="com.spider.amazon.model.AmazonAdConsumeItemDO">
            <id column="ItemId" jdbcType="INTEGER" property="id"/>
            <result column="ItemSettingId" jdbcType="INTEGER" property="settingId"/>
            <result property="name" jdbcType="VARCHAR" column="ItemName"/>
            <result property="asin" jdbcType="VARCHAR" column="ItemAsin"/>
            <result property="keyword" jdbcType="VARCHAR" column="ItemKeyword"/>
            <result column="ItemConsume" jdbcType="BOOLEAN" property="consume"/>
            <result column="ItemCreatedBy" jdbcType="VARCHAR" property="createdBy"/>
            <result column="ItemUpdatedBy" jdbcType="VARCHAR" property="updatedBy"/>
            <result column="ItemCreatedAt" jdbcType="TIMESTAMP" property="createdAt"/>
            <result column="ItemUpdatedAt" jdbcType="TIMESTAMP" property="updatedAt"/>
            <result column="ItemRemoved" jdbcType="BOOLEAN" property="removed"/>
        </collection>
    </resultMap>

    <resultMap id="itemResultMap" type="com.spider.amazon.model.AmazonAdConsumeItemDO">
        <id column="ItemId" jdbcType="INTEGER" property="id"/>
        <result column="ItemSettingId" jdbcType="INTEGER" property="settingId"/>
        <result property="name" jdbcType="VARCHAR" column="ItemName"/>
        <result property="asin" jdbcType="VARCHAR" column="ItemAsin"/>
        <result property="keyword" jdbcType="VARCHAR" column="ItemKeyword"/>
        <result column="ItemConsume" jdbcType="BOOLEAN" property="consume"/>
        <result column="ItemCreatedBy" jdbcType="VARCHAR" property="createdBy"/>
        <result column="ItemUpdatedBy" jdbcType="VARCHAR" property="updatedBy"/>
        <result column="ItemCreatedAt" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="ItemUpdatedAt" jdbcType="TIMESTAMP" property="updatedAt"/>
        <result column="ItemRemoved" jdbcType="BOOLEAN" property="removed"/>
    </resultMap>

    <sql id="settingColumn">
        ${setting}."Id"                 SettingId,
        ${setting}."Name"               SettingName,
        ${setting}."Description"        SettingDescription,
        ${setting}."SearchWords"        SettingSearchWords,
        ${setting}."Active"             SettingActive,
        ${setting}."CreatedAt"          SettingCreatedAt,
        ${setting}."UpdatedAt"          SettingUpdatedAt,
        ${setting}."CreatedBy"          SettingCreatedBy,
        ${setting}."UpdatedBy"          SettingUpdatedBy,
        ${setting}."Removed"            SettingRemoved,
        ${setting}."SearchWords"        SettingSearchWords,
    </sql>

    <sql id="itemColumn">
        ${item}.Id            ItemId,
        ${item}.SettingId        ItemSettingId,
        ${item}.Name        ItemName,
        ${item}.Asin        ItemAsin,
        ${item}.Keyword        ItemKeyword,
        ${item}.Consume        ItemConsume,
        ${item}.CreatedBy        ItemCreatedBy,
        ${item}.UpdatedBy        ItemUpdatedBy,
        ${item}.CreatedAt        ItemCreatedAt,
        ${item}.UpdatedAt        ItemUpdatedAt,
        ${item}.Removed        ItemRemoved
    </sql>

    <select id="getAllSetting" resultMap="BaseResultMap">
        select
        <include refid="settingColumn">
            <property name="setting" value="acs"/>
        </include>
        <include refid="itemColumn">
            <property name="item" value="aci"/>
        </include>
        from AmazonAdConsumeSetting acs
        left join AmazonAdConsumeItem aci on acs.Id = aci.SettingId and aci."Removed" = 0
        where acs."Removed" = 0;
    </select>

    <select id="getAllActiveSetting" resultMap="BaseResultMap">
        select
        <include refid="settingColumn">
            <property name="setting" value="acs"/>
        </include>
        <include refid="itemColumn">
            <property name="item" value="aci"/>
        </include>
        from AmazonAdConsumeSetting acs
        left join AmazonAdConsumeItem aci on acs.Id = aci.SettingId and aci."Removed" = 0
        where acs."Removed" = 0
        and Active = 1;
    </select>

    <select id="getSettingById" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="settingColumn">
            <property name="setting" value="acs"/>
        </include>
        <include refid="itemColumn">
            <property name="item" value="aci"/>
        </include>
        from AmazonAdConsumeSetting acs
        left join AmazonAdConsumeItem aci on acs.Id = aci.SettingId and aci."Removed" = 0
        where acs."Removed" = 0
        and acs.Id = #{settingId}
    </select>

    <select id="getAllSettingByCreatedUser" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="settingColumn">
            <property name="setting" value="acs"/>
        </include>
        <include refid="itemColumn">
            <property name="item" value="aci"/>
        </include>
        from AmazonAdConsumeSetting acs
        left join AmazonAdConsumeItem aci on acs.Id = aci.SettingId and aci."Removed" = 0
        where acs."Removed" = 0
        and acs.CreatedBy = #{userId}
    </select>

    <select id="getAllActiveSettingByCreatedUser" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="settingColumn">
            <property name="setting" value="acs"/>
        </include>
        <include refid="itemColumn">
            <property name="item" value="aci"/>
        </include>
        from AmazonAdConsumeSetting acs
        left join AmazonAdConsumeItem aci on acs.Id = aci.SettingId and aci."Removed" = 0
        where acs."Removed" = 0
        and Active = 1
        and acs.CreatedBy = #{userId}
    </select>

    <insert id="insertSetting" parameterType="com.spider.amazon.model.AmazonAdConsumeSettingDO" useGeneratedKeys="true" keyProperty="id">
        insert into AmazonAdConsumeSetting
        <trim prefix="(" suffix=")">
            <if test="name != null">
                Name,
            </if>
            <if test="description != null">
                Description,
            </if>
            <if test="searchWords != null">
                SearchWords,
            </if>
            <if test="createdBy != null">
                CreatedBy,
            </if>
            <if test="updatedBy != null">
                UpdatedBy,
            </if>
            CreatedAt,
            UpdatedAt
        </trim>
        <trim prefix="values (" suffix=")">
            <if test="name != null">
                #{name},
            </if>
            <if test="description != null">
                #{description},
            </if>
            <if test="searchWords != null">
                #{searchWords},
            </if>
            <if test="createdBy != null">
                #{createdBy},
            </if>
            <if test="updatedBy != null">
                #{updatedBy},
            </if>
            getdate(),
            getdate()
        </trim>
    </insert>

    <update id="updateSetting" parameterType="com.spider.amazon.model.AmazonAdConsumeSettingDO">
        update AmazonAdConsumeSetting
        <trim prefix=" set ">
            <if test="name != null">
                Name = #{name},
            </if>
            <if test="description != null">
                Description = #{description},
            </if>
            <if test="searchWords != null">
                SearchWords #{searchWords},
            </if>
            <if test="updatedBy != null">
                UpdatedBy = #{updatedBy},
            </if>
            UpdatedAt = getdate()
        </trim>
        where Id = #{id} and "Removed" = 0
    </update>

    <update id="startAdConsume" parameterType="map">
        update AmazonAdConsumeSetting
        set Active    = 1,
            UpdatedAt = getdate(),
            UpdatedBy = #{userId}
        where Id = #{settingId}
          and "Removed" = 0
    </update>

    <update id="stopAdConsume" parameterType="map">
        update AmazonAdConsumeSetting
        set Active    = 0,
            UpdatedAt = getdate(),
            UpdatedBy = #{userId}
        where Id = #{settingId}
          and "Removed" = 0
    </update>

    <select id="getSettingItemById" parameterType="map" resultMap="itemResultMap">
        select
        <include refid="itemColumn">
            <property name="item" value="aci"/>
        </include>
        from AmazonAdConsumeItem aci
        where "Removed" = 0 and Id = #{itemId}
    </select>

    <insert id="insertAdConsumeItem" parameterType="com.spider.amazon.model.AmazonAdConsumeItemDO" useGeneratedKeys="true"
            keyProperty="id">
        insert into AmazonAdConsumeItem
        <trim prefix="( " suffix=" )">
            <if test="settingId != null">
                SettingId,
            </if>
            <if test="name != null">
                "Name",
            </if>
            <if test="asin != null">
                Asin,
            </if>
            <if test="keyword != null">
                Keyword,
            </if>
            <if test="consume != null">
                Consume,
            </if>
            <if test="createdBy != null">
                CreatedBy,
            </if>
            <if test="updatedBy != null">
                UpdatedBy,
            </if>
            CreatedAt,
            UpdatedAt
        </trim>

        <trim prefix="values ( " suffix=" )">
            <if test="settingId != null">
                #{settingId},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="asin != null">
                #{asin},
            </if>
            <if test="keyword != null">
                #{keyword},
            </if>
            <if test="consume != null">
                #{consume},
            </if>
            <if test="createdBy != null">
                #{createdBy},
            </if>
            <if test="updatedBy != null">
                #{updatedBy},
            </if>
            getdate(),
            getdate()
        </trim>
    </insert>

    <update id="updateAdConsumeItem" parameterType="com.spider.amazon.model.AmazonAdConsumeItemDO">
        update AmazonAdConsumeItem
        <trim prefix=" set ">
            <if test="name != null">
                Name = #{name},
            </if>
            <if test="asin != null">
                Asin = #{asin},
            </if>
            <if test="keyword != null">
                Keyword #{keyword},
            </if>
            <if test="updatedBy != null">
                consume = #{consume},
            </if>
            <if test="updatedBy != null">
                UpdatedBy = #{updatedBy},
            </if>
            UpdatedAt = getdate()
        </trim>
        where Id = #{id} and "Removed" = 0
    </update>

    <update id="whileListItem" parameterType="map">
        update AmazonAdConsumeItem
        set Consume   = 1,
            UpdatedAt = getdate(),
            UpdatedBy = #{userId}
        where Id = #{settingId}
          and "Removed" = 0
    </update>

    <update id="blackListItem" parameterType="map">
        update AmazonAdConsumeItem
        set Consume   = 0,
            UpdatedAt = getdate(),
            UpdatedBy = #{userId}
        where Id = #{settingId}
          and "Removed" = 0
    </update>

    <update id="removeSetting" parameterType="map">
        update AmazonAdConsumeSetting
        set Removed   = 1,
            UpdatedAt = getdate(),
            UpdatedBy = #{userId}
        where Removed = 0
          and Id = #{settingId}
          and "Removed" = 0
    </update>

    <update id="removeItem" parameterType="map">
        update AmazonAdConsumeItem
        set Removed   = 1,
            UpdatedAt = getdate(),
            UpdatedBy = #{userId}
        where Removed = 0
          and Id = #{itemId}
          and "Removed" = 0
    </update>

</mapper>